import _ from 'lodash';

import csvs from './csvs';

const OUTPUT_DIRECTORY = '/path/to/output';
const TRUE = true;

export default {
  analysisHorizon: 0,
  analysisHorizonMode: '1',
  mtsBackupEnergyPrice: new Array(12).fill(100),
  mtsBackupEnergyReservation: new Array(12).fill(30),
  tsCriticalLoad: csvs.siteLoad, // note: using hardcoded site load
  daGrowth: 0,
  tsDaPrice: csvs.daPrice,
  dataYear: 2017,
  dcmGrowth: 5,
  discountRate: 7,
  deferralPlannedLoadLimit: 11000,
  deferralReversePowerFlowLimit: -11000,
  deferralGrowth: 0,
  deferralPrice: 10000,
  tsDeferralLoad: csvs.deferralLoad,
  mtsDrCapacityReservation: new Array(12).fill(100),
  mtsDrCapacityPrice: new Array(12).fill(50),
  drEndHour: 24,
  drEventLength: null,
  mtsDrEnergyPrice: new Array(12).fill(68),
  drGrowth: 1.47,
  drIncludeWeekends: true,
  drNumberEvents: 8,
  mtsDrMonthsApplied: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
  drProgramType: 'Day of',
  drStartHour: 10,
  externalIncentives: [
    {
      id: '1',
      year: 2017,
      taxCredit: 300,
      otherIncentive: 100,
    },
    {
      id: '2',
      year: 2018,
      taxCredit: 200,
      otherIncentive: 100,
    },
  ],
  federalTaxRate: 3,
  frEOU: 0.3,
  frEOD: 0.3,
  frGrowth: 2,
  frEnergyPriceGrowth: 5,
  frCombinedMarket: 0,
  frDuration: 0,
  fuelPriceGas: 0,
  fuelPriceLiquid: 3.5,
  fuelPriceOther: 0,
  tsFrPrice: csvs.price,
  tsFrUpPrice: csvs.price,
  tsFrDownPrice: csvs.price,
  gridLocation: 'Customer',
  includeSiteLoad: TRUE,
  includeInterconnectionConstraints: TRUE,
  includeSystemLoad: TRUE,
  inflationRate: 3,
  tsLfDownPrice: csvs.price,
  lfDuration: 0,
  lfCombinedMarket: TRUE,
  lfGrowth: 2,
  lfEnergyPriceGrowth: 1.5,
  tsLfEOU: csvs.deferralLoad, // TODO fix this
  tsLfEOD: csvs.deferralLoad, // TODO fix this
  tsLfPrice: csvs.price,
  tsLfUpPrice: csvs.price,
  maxImport: -10000,
  maxExport: 40000,
  nsrGrowth: 2,
  nsrDuration: 0,
  tsNsrPrice: csvs.price,
  objectivesDA: TRUE,
  objectivesDR: TRUE,
  objectivesResilience: TRUE,
  objectivesBackupPower: TRUE,
  objectivesRA: TRUE,
  objectivesRetailDemandChargeReduction: TRUE,
  objectivesRetailEnergyChargeReduction: TRUE,
  objectivesSR: TRUE,
  objectivesNSR: TRUE,
  objectivesFR: TRUE,
  objectivesDeferral: TRUE,
  objectivesLF: TRUE,
  objectivesUserDefined: TRUE,
  optimizationHorizon: 'month',
  outputDirectory: OUTPUT_DIRECTORY,
  ownership: 'Customer',
  propertyTaxRate: 3,
  tsRaActive: new Array(8760).fill(0),
  mtsRaCapacityPrice: new Array(12).fill(350),
  raNumberEvents: 24,
  raEventLength: 6,
  raDispatchMode: 'Constrain power',
  raEventSelectionMethod: 'Peak by Year',
  raGrowth: 0.86,
  reliabilityTarget: 6,
  reliabilityPostOptimizationOnly: false,
  retailTimeShiftGrowth: 4,
  retailTariffBillingPeriods: [
    {
      id: 1,
      startMonth: 1,
      endMonth: 5,
      startTime: 1,
      endTime: 24,
      excludingStartTime: null,
      excludingEndTime: null,
      weekday: 2,
      value: 0.05323,
      chargeType: 'Energy',
      name: '',
    },
    {
      id: 2,
      startMonth: 1,
      endMonth: 5,
      startTime: 1,
      endTime: 24,
      excludingStartTime: null,
      excludingEndTime: null,
      weekday: 2,
      value: 19.32,
      chargeType: 'Demand',
      name: '',
    },
    {
      id: 3,
      startMonth: 6,
      endMonth: 9,
      startTime: 1,
      endTime: 24,
      excludingStartTime: null,
      excludingEndTime: null,
      weekday: 2,
      value: 0.05668,
      chargeType: 'Energy',
      name: '',
    },
    {
      id: 4,
      startMonth: 6,
      endMonth: 9,
      startTime: 1,
      endTime: 24,
      excludingStartTime: null,
      excludingEndTime: null,
      weekday: 2,
      value: 7.08,
      chargeType: 'Demand',
      name: '',
    },
    {
      id: 5,
      startMonth: 10,
      endMonth: 12,
      startTime: 1,
      endTime: 24,
      excludingStartTime: null,
      excludingEndTime: null,
      weekday: 2,
      value: 0.05323,
      chargeType: 'Energy',
      name: '',
    },
    {
      id: 6,
      startMonth: 10,
      endMonth: 12,
      startTime: 1,
      endTime: 24,
      excludingStartTime: null,
      excludingEndTime: null,
      weekday: 2,
      value: 30.5,
      chargeType: 'Demand',
      name: '',
    },
  ],
  tsSiteLoad: csvs.siteLoad,
  srGrowth: 6.2,
  srDuration: 0,
  tsSrPrice: csvs.price,
  startYear: 2017,
  stateTaxRate: 3,
  tsSystemLoad: csvs.siteLoad,
  technologySpecsSolarPV: [{
    active: true,
    id: '',
    values: {
      allowGridCharge: false,
      constructionYear: 2017,
      cost: 200,
      decomissioningCost: 0,
      errorList: [],
      expectedLifetime: 99,
      fixedOMCosts: 0,
      gamma: 0,
      generationProfile: csvs.deferralLoad, // TODO fix this
      includeCurtailment: false,
      includePPA: false,
      includeSizeLimits: false,
      inverterMax: 3000,
      isReplaceable: 0,
      loc: 'ac',
      macrsTerm: 3,
      name: 'solar',
      nu: 0,
      operationYear: 2017,
      ppaCost: null,
      ppaInflationRate: null,
      ratedCapacity: 100,
      ratedCapacityMaximum: null,
      ratedCapacityMinimum: null,
      replacementCost: 100,
      replacementConstructionTime: 1,
      salvageValue: 'User defined',
      salvageValueOption: 0,
      shouldSize: false,
      ter: 7,
    },
  }],
  technologySpecsICE: [{
    active: true,
    id: '',
    values: {
      capitalCost: 0,
      capitalCostPerkW: 0,
      constructionYear: 2017,
      decomissioningCost: 0,
      efficiency: 0.15,
      fuelType: 'gas',
      errorList: [],
      expectedLifetime: 13,
      fixedOMCostIncludingExercise: 0,
      includeSizeLimits: false,
      isReplaceable: false,
      macrsTerm: '3',
      minimumPower: 0,
      name: 'gen',
      numGenerators: 2,
      operationYear: 2017,
      ratedCapacity: 4000,
      ratedCapacityMaximum: null,
      ratedCapacityMinimum: null,
      replacementCost: 200,
      replacementCostPerkW: 200,
      replacementConstructionTime: 1,
      salvageValue: 0,
      salvageValueOption: 'User defined',
      shouldSize: false,
      ter: 7,
      variableOMCost: 0,
    },
  }],
  technologySpecsBattery: [{
    active: true,
    id: '',
    values: {
      associatedInputs: [],
      associatedInputsComplete: true,
      auxiliaryLoad: 0,
      calendarDegradationRate: 0,
      capitalCost: 0,
      capitalCostPerkW: 100,
      capitalCostPerkWh: 800,
      chargingCapacity: 1000,
      constructionYear: 2017,
      dailyCycleLimit: 1,
      dischargingCapacity: 1000,
      decomissioningCost: 0,
      energyCapacity: 2000,
      energyCapacityMaximum: null,
      energyCapacityMinimum: null,
      expectedLifetime: 99,
      errorList: [],
      fixedOMCosts: 1000,
      name: 'Battery',
      includeAuxiliaryLoad: false,
      includeCycleDegradation: false,
      includeSizeLimits: false,
      isReplaceable: false,
      lowerSOCLimit: 0,
      macrsTerm: 3,
      maxDuration: 0,
      operationYear: 2017,
      powerCapacity: 0,
      powerCapacityMaximum: null,
      powerCapacityMinimum: null,
      replacementConstructionTime: 1,
      replacementCost: 0,
      replacementCostPerkW: 100,
      replacementCostPerkWh: 800,
      roundtripEfficiency: 85,
      salvageValue: 0,
      salvageValueOption: 'User defined',
      selfDischargeRate: 0,
      shouldDiffChargeDischarge: true,
      shouldEnergySize: false,
      shouldLimitDailyCycling: false,
      shouldMaxDuration: false,
      shouldPowerSize: false,
      stateOfHealth: null,
      targetSOC: 50,
      ter: 7,
      upperSOCLimit: 100,
      variableOMCosts: 0,
    },
  }],
  technologySpecsDieselGen: [{
    active: true,
    id: '',
    values: {
      name: 'Diesel Generator',
      ratedCapacity: 4000,
      minimumPower: 100,
      startupTime: 0, // TODO remove
      efficiency: 0.15,
      fuelType: 'liquid',
      capitalCost: 200,
      variableOMCost: 10,
      fixedOMCostIncludingExercise: 12,
      constructionDate: 2017,
      operationDate: 2017,
      macrsTerm: 3,
      shouldSize: false,
      numGenerators: 2,
      minGenerators: 0,
    },
  }],
  technologySpecsControllableLoad: [],
  technologySpecsFleetEV: [],
  technologySpecsSingleEV: [],
  timestep: 1,
  userPrice: 347,
  tsUserEnergyMax: _.fill(Array(8760), 9000),
  tsUserEnergyMin: _.fill(Array(8760), 0),
  tsUserPowerExportMax: _.fill(Array(8760), 1900),
  tsUserPowerExportMin: _.fill(Array(8760), 0),
  tsUserPowerImportMax: _.fill(Array(8760), 900),
  tsUserPowerImportMin: _.fill(Array(8760), 0),
};
