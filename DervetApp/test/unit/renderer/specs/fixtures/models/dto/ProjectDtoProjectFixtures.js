import _ from 'lodash';
import path from 'path';

import PVGenerationTimeSeries from '@/models/TimeSeries/PVGenerationTimeSeries';
import FleetEVBaselineLoadTimeSeries from '@/models/TimeSeries/FleetEVBaselineLoadTimeSeries';
import SiteLoadTimeSeries from '@/models/TimeSeries/SiteLoadTimeSeries';

export const testInputsDirectory = path.join('path', 'to', 'inputs');
export const testResultsDirectory = path.join('path', 'to', 'outputs');
export const testUuid1 = '14b1348c-29f2-402a-a167-2d30aae86680';
export const testUuid2 = 'dbdd6d5d-e5e2-4948-bc3e-5d7ae3040ba0';

export const makeProjectBattery = id => ({
  active: true,
  auxiliaryLoad: 0,
  batteryCycles: [
    { ulimit: 0.05, val: 75000 },
    { ulimit: 0.1, val: 40500 },
    { ulimit: 0.15, val: 27000 },
    { ulimit: 0.2, val: 20250 },
    { ulimit: 0.3, val: 11250 },
    { ulimit: 0.4, val: 6750 },
    { ulimit: 0.5, val: 4500 },
    { ulimit: 0.6, val: 3750 },
    { ulimit: 0.7, val: 3225 },
    { ulimit: 0.8, val: 2813 },
    { ulimit: 0.9, val: 2475 },
    { ulimit: 1, val: 2250 },
  ],
  calendarDegradationRate: 0,
  capitalCost: 0,
  capitalCostPerkW: 800,
  capitalCostPerkWh: 250,
  chargingCapacity: null,
  chargingCapacityMaximum: null,
  chargingCapacityMinimum: null,
  complete: true,
  constructionYear: 2017,
  dailyCycleLimit: 0,
  dischargingCapacity: null,
  dischargingCapacityMaximum: null,
  dischargingCapacityMinimum: null,
  decomissioningCost: 0,
  endOfLifeExpenses: 0,
  energyCapacity: 2000,
  energyCapacityMaximum: null,
  energyCapacityMinimum: null,
  expectedLifetime: 99,
  errorList: [],
  fixedOMCosts: 10,
  id,
  includeAuxiliaryLoad: false,
  includeCycleDegradation: false,
  includeSizeLimits: false,
  isReplaceable: false,
  lowerSOCLimit: 0,
  macrsTerm: 3,
  maxDuration: 0,
  name: 'BESS 1',
  operationYear: 2017,
  powerCapacity: null,
  powerCapacityMaximum: null,
  powerCapacityMinimum: null,
  replacementConstructionTime: 1,
  replacementCost: 0,
  replacementCostPerkW: 100,
  replacementCostPerkWh: 800,
  roundtripEfficiency: 91,
  salvageValue: 0,
  salvageValueOption: 'User defined',
  selfDischargeRate: 0,
  shouldDiffChargeDischarge: false,
  shouldEnergySize: true,
  shouldLimitDailyCycling: false,
  shouldMaxDuration: false,
  shouldPowerSize: true,
  stateOfHealth: 0,
  tag: 'Battery',
  targetSOC: 50,
  technologyType: 'Energy Storage System',
  ter: 7,
  upperSOCLimit: 100,
  variableOMCosts: 0,
});

export const makeProjectControllableLoad = id => ({
  active: true,
  complete: true,
  constructionYear: 2017,
  decomissioningCost: 0,
  duration: 2,
  errorList: [],
  expectedLifetime: 7,
  id,
  isReplaceable: false,
  load: new SiteLoadTimeSeries((_.fill(Array(5), 1))),
  macrsTerm: 3,
  name: 'demand response',
  operationYear: 2018,
  ratedCapacity: 100,
  replacementConstructionTime: null,
  salvageValue: null,
  salvageValueOption: 'Sunk Cost',
  tag: 'ControllableLoad',
  technologyType: 'Controllable Load',
  ter: 7,
});

export const makeProjectDieselGen = id => ({
  active: true,
  capitalCost: 0,
  capitalCostPerkW: 0,
  complete: true,
  constructionYear: 2017,
  decomissioningCost: 0,
  efficiency: 0.15,
  errorList: [],
  expectedLifetime: 13,
  fixedOMCostIncludingExercise: 0,
  fuelCost: 0,
  id,
  includeSizeLimits: false,
  isReplaceable: false,
  macrsTerm: '3',
  minimumPower: 0,
  name: 'gen',
  numGenerators: 2,
  operationYear: 2017,
  ratedCapacity: 4000,
  ratedCapacityMaximum: null,
  ratedCapacityMinimum: null,
  replacementCost: 200,
  replacementCostPerkW: 200,
  replacementConstructionTime: 1,
  salvageValue: 0,
  salvageValueOption: 'User defined',
  shouldSize: false,
  tag: 'DieselGen',
  technologyType: 'Generator',
  ter: 7,
  variableOMCost: 0,
});

export const makeProjectFleetEV = id => ({
  active: true,
  baselineLoad: new FleetEVBaselineLoadTimeSeries((_.fill(Array(5), 1))),
  capitalCost: 600,
  complete: true,
  constructionYear: 2017,
  decomissioningCost: 0,
  errorList: [],
  expectedLifetime: 7,
  fixedOMCosts: 100,
  id,
  isReplaceable: false,
  lostLoadCost: 60,
  macrsTerm: 3,
  maximumLoadCtrl: 20,
  name: 'fleet ev',
  operationYear: 2018,
  replacementCost: 500,
  replacementConstructionTime: null,
  salvageValue: null,
  salvageValueOption: 'Sunk Cost',
  tag: 'ElectricVehicle2',
  technologyType: 'Electric Vehicle',
  ter: 7,
});

export const makeProjectICE = id => ({
  active: true,
  capitalCost: 0,
  capitalCostPerkW: 0,
  complete: true,
  constructionYear: 2017,
  decomissioningCost: 0,
  efficiency: 0.15,
  errorList: [],
  expectedLifetime: 13,
  fixedOMCostIncludingExercise: 0,
  fuelCost: 0,
  id,
  includeSizeLimits: false,
  isReplaceable: false,
  macrsTerm: '3',
  minimumPower: 0,
  name: 'gen',
  numGenerators: 2,
  operationYear: 2017,
  ratedCapacity: 4000,
  ratedCapacityMaximum: null,
  ratedCapacityMinimum: null,
  replacementCost: 200,
  replacementCostPerkW: 200,
  replacementConstructionTime: 1,
  salvageValue: 0,
  salvageValueOption: 'User defined',
  shouldSize: false,
  tag: 'ICE',
  technologyType: 'Generator',
  ter: 7,
  variableOMCost: 0,
});

export const makeProjectPV = id => ({
  active: true,
  allowGridCharge: false,
  complete: true,
  constructionYear: 2017,
  cost: 1660,
  decomissioningCost: 0,
  errorList: [],
  expectedLifetime: 99,
  fixedOMCosts: 0,
  gamma: null,
  generationProfile: new PVGenerationTimeSeries((_.fill(Array(5), 1))),
  id,
  includeCurtailment: false,
  includePPA: false,
  includeSizeLimits: false,
  inverterMax: 1000000000,
  isReplaceable: 0,
  loc: 'AC',
  macrsTerm: 3,
  name: 'Installation 1',
  nu: null,
  operationYear: 2017,
  ppaCost: null,
  ppaInflationRate: null,
  ratedCapacity: 1000,
  ratedCapacityMaximum: null,
  ratedCapacityMinimum: null,
  replacementCost: 100,
  replacementConstructionTime: 1,
  salvageValue: 'User defined',
  salvageValueOption: 0,
  shouldSize: false,
  tag: 'PV',
  technologyType: 'Intermittent Resource',
  ter: 7,
});

export const makeProjectSingleEV = id => ({
  active: true,
  capitalCost: 800,
  complete: true,
  constructionYear: 2017,
  decomissioningCost: 0,
  energyTarget: 50,
  errorList: [],
  expectedLifetime: 7,
  fixedOMCosts: 50,
  id,
  isReplaceable: false,
  macrsTerm: 3,
  maximumChargingPower: 600,
  minimumChargingPower: 125,
  name: 'single ev',
  operationYear: 2018,
  plugInHour: 14,
  plugOutHour: 20,
  replacementCost: 250,
  replacementConstructionTime: null,
  salvageValue: null,
  salvageValueOption: 'Sunk Cost',
  tag: 'ElectricVehicle1',
  technologyType: 'Electric Vehicle',
  ter: 7,
});
