import _ from 'lodash';
import path from 'path';

export const testInputsDirectory = path.join('/path', 'to', 'inputs');
export const testResultsDirectory = path.join('/path', 'to', 'outputs');
export const testUuid1 = '14b1348c-29f2-402a-a167-2d30aae86680';
export const testUuid2 = 'dbdd6d5d-e5e2-4948-bc3e-5d7ae3040ba0';

export const makeProjectBattery = id => ({
  active: true,
  id,
  values: {
    auxiliaryLoad: 0,
    cycleLifeCurve: [
      { ulimit: 0.05, val: 75000 },
      { ulimit: 0.1, val: 40500 },
      { ulimit: 0.15, val: 27000 },
      { ulimit: 0.2, val: 20250 },
      { ulimit: 0.3, val: 11250 },
      { ulimit: 0.4, val: 6750 },
      { ulimit: 0.5, val: 4500 },
      { ulimit: 0.6, val: 3750 },
      { ulimit: 0.7, val: 3225 },
      { ulimit: 0.8, val: 2813 },
      { ulimit: 0.9, val: 2475 },
      { ulimit: 1, val: 2250 },
    ],
    calendarDegradationRate: 0,
    capitalCost: 0,
    capitalCostPerkW: 800,
    capitalCostPerkWh: 250,
    chargingCapacity: null,
    constructionYear: 2017,
    dailyCycleLimit: 0,
    dischargingCapacity: null,
    decomissioningCost: 0,
    endOfLifeExpenses: 0,
    energyCapacity: 2000,
    energyCapacityMaximum: null,
    energyCapacityMinimum: null,
    expectedLifetime: 99,
    errorList: [],
    fixedOMCosts: 10,
    includeAuxiliaryLoad: false,
    includeCycleDegradation: false,
    includeSizeLimits: false,
    isReplaceable: false,
    lowerSOCLimit: 0,
    macrsTerm: 3,
    maxDuration: 0,
    name: 'BESS 1',
    operationYear: 2017,
    powerCapacity: null,
    powerCapacityMaximum: null,
    powerCapacityMinimum: null,
    replacementConstructionTime: 1,
    replacementCost: 0,
    replacementCostPerkW: 100,
    replacementCostPerkWh: 800,
    roundtripEfficiency: 91,
    salvageValue: 0,
    salvageValueOption: 'User defined',
    selfDischargeRate: 0,
    shouldDiffChargeDischarge: false,
    shouldEnergySize: true,
    shouldLimitDailyCycling: false,
    shouldMaxDuration: false,
    shouldPowerSize: true,
    stateOfHealth: 0,
    targetSOC: 50,
    ter: 7,
    upperSOCLimit: 100,
    variableOMCosts: 0,
  },
});

export const makeProjectControllableLoad = id => ({
  active: true,
  id,
  values: {
    constructionYear: 2017,
    decomissioningCost: 0,
    duration: 2,
    errorList: [],
    expectedLifetime: 7,
    isReplaceable: false,
    load: _.fill(Array(5), 1),
    name: 'demand response',
    operationYear: 2018,
    ratedCapacity: 100,
    replacementConstructionTime: null,
    salvageValue: null,
    salvageValueOption: 'Sunk Cost',
    ter: 7,
  },
});

export const makeProjectDieselGen = id => ({
  active: true,
  id,
  values: {
    capitalCost: 0,
    capitalCostPerkW: 0,
    constructionYear: 2017,
    decomissioningCost: 0,
    efficiency: 0.15,
    fuelType: 'liquid',
    errorList: [],
    expectedLifetime: 13,
    fixedOMCostIncludingExercise: 0,
    includeSizeLimits: false,
    isReplaceable: false,
    macrsTerm: '3',
    minimumPower: 0,
    name: 'gen',
    numGenerators: 2,
    operationYear: 2017,
    ratedCapacity: 4000,
    ratedCapacityMaximum: null,
    ratedCapacityMinimum: null,
    replacementCost: 200,
    replacementCostPerkW: 200,
    replacementConstructionTime: 1,
    salvageValue: 0,
    salvageValueOption: 'User defined',
    shouldSize: false,
    ter: 7,
    variableOMCost: 0,
  },
});

export const makeProjectFleetEV = id => ({
  active: true,
  id,
  values: {
    baselineLoad: (_.fill(Array(5), 1)),
    capitalCost: 600,
    constructionYear: 2017,
    decomissioningCost: 0,
    errorList: [],
    expectedLifetime: 7,
    fixedOMCosts: 100,
    isReplaceable: false,
    lostLoadCost: 60,
    macrsTerm: 3,
    maximumLoadCtrl: 20,
    name: 'fleet ev',
    operationYear: 2018,
    replacementCost: 500,
    replacementConstructionTime: null,
    salvageValue: null,
    salvageValueOption: 'Sunk Cost',
    ter: 7,
  },
});

export const makeProjectICE = id => ({
  active: true,
  id,
  values: {
    capitalCost: 0,
    capitalCostPerkW: 0,
    constructionYear: 2017,
    decomissioningCost: 0,
    efficiency: 0.15,
    fuelType: 'liquid',
    errorList: [],
    expectedLifetime: 13,
    fixedOMCostIncludingExercise: 0,
    includeSizeLimits: false,
    isReplaceable: false,
    macrsTerm: '3',
    minimumPower: 0,
    name: 'gen',
    numGenerators: 2,
    operationYear: 2017,
    ratedCapacity: 4000,
    ratedCapacityMaximum: null,
    ratedCapacityMinimum: null,
    replacementCost: 200,
    replacementCostPerkW: 200,
    replacementConstructionTime: 1,
    salvageValue: 0,
    salvageValueOption: 'User defined',
    shouldSize: false,
    ter: 7,
    variableOMCost: 0,
  },
});

export const makeProjectPV = id => ({
  active: true,
  id,
  values: {
    allowGridCharge: false,
    constructionYear: 2017,
    cost: 1660,
    decomissioningCost: 0,
    errorList: [],
    expectedLifetime: 99,
    fixedOMCosts: 0,
    gamma: null,
    generationProfile: _.fill(Array(5), 1),
    includeCurtailment: false,
    includePPA: false,
    includeSizeLimits: false,
    inverterMax: 1000000000,
    isReplaceable: 0,
    loc: 'AC',
    macrsTerm: 3,
    name: 'Installation 1',
    nu: null,
    operationYear: 2017,
    ppaCost: null,
    ppaInflationRate: null,
    ratedCapacity: 1000,
    ratedCapacityMaximum: null,
    ratedCapacityMinimum: null,
    replacementCost: 100,
    replacementConstructionTime: 1,
    salvageValue: 'User defined',
    salvageValueOption: 0,
    shouldSize: false,
    ter: 7,
  },
});

export const makeProjectSingleEV = id => ({
  active: true,
  id,
  values: {
    capitalCost: 800,
    constructionYear: 2017,
    decomissioningCost: 0,
    energyTarget: 50,
    errorList: [],
    expectedLifetime: 7,
    fixedOMCosts: 50,
    isReplaceable: false,
    macrsTerm: 3,
    maximumChargingPower: 600,
    minimumChargingPower: 125,
    name: 'single ev',
    operationYear: 2018,
    plugInHour: 14,
    plugOutHour: 20,
    replacementCost: 250,
    replacementConstructionTime: null,
    salvageValue: null,
    salvageValueOption: 'Sunk Cost',
    ter: 7,
  },
});
